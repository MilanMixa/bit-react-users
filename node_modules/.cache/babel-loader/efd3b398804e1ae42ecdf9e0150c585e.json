{"ast":null,"code":"import _slicedToArray from\"C:/Users/Mixa/Desktop/BIT-React/bit-react-users/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useEffect,useState}from\"react\";import{getUserList}from\"../Data/data-users.js\";import{Avatar}from\"../Avatar/Avatar\";import{UserInfo}from\"../UserInfo/UserInfo\";import{GridButton}from\"../GridButton/GridButton.jsx\";import{ListButton}from\"../ListButton/ListButton.jsx\";import{Grid}from\"../Grid/Grid.jsx\";import\"./UserList.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserList=function UserList(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),selected=_useState2[0],setSelected=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),inputValue=_useState6[0],setInputValue=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),filteredUsers=_useState8[0],setFilteredUsers=_useState8[1];useEffect(function(){getUserList().then(function(users){setUsers(users);setFilteredUsers(users);});},[]);var onListClick=function onListClick(){setSelected(true);};var onGridClick=function onGridClick(){setSelected(false);};var refreashPage=function refreashPage(){setInputValue(\"\");getUserList().then(function(users){setUsers(users);setFilteredUsers(users);});};var onTyping=function onTyping(event){setInputValue(event.target.value);var filtered=users.filter(function(user){return user.name.first.includes(event.target.value);});setFilteredUsers(filtered);};return/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-div\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-div\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search users\",value:inputValue,onChange:onTyping}),/*#__PURE__*/_jsxs(\"button\",{type:\"Submit\",id:\"grid-button\",onClick:refreashPage,children:[\"Refresh users \",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-redo\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(ListButton,{onClick:onListClick}),/*#__PURE__*/_jsx(GridButton,{onClick:onGridClick})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main-div\",children:/*#__PURE__*/_jsx(\"div\",{className:\"grid-flex\",children:filteredUsers.map(function(user,index){return selected?/*#__PURE__*/_jsxs(\"div\",{className:\"single-user\",children:[/*#__PURE__*/_jsx(Avatar,{userLogo:user}),/*#__PURE__*/_jsx(UserInfo,{userData:user})]},index):/*#__PURE__*/_jsx(\"div\",{className:\"single-grid-user\",children:/*#__PURE__*/_jsx(Grid,{userGridData:user})},index);})})})]});};// class UserList extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             users : [],\n//             selected: true\n//         }\n//     }\n//     onListClick = () => {\n//         this.setState({selected: true})\n//     };\n//     onGridClick = () => {\n//         this.setState({selected: false})\n//     };\n//     componentDidMount(){\n//         getUserList()\n//             .then(users =>{\n//                 this.setState({users})\n//             })\n//     };\n//     render(){\n//         return (\n//          <div className=\"main-container\">\n//                 <div className=\"btn-container\">\n//                 <ListButton onClick={this.onListClick} />\n//                  <GridButton onClick={this.onGridClick}/>\n//              </div>\n//                 {\n//                 this.state.users.map((user, index) => this.state.selected ?\n//                     (\n//                         <div className=\"single-user\" key={index}>\n//                                <Avatar userLogo={user}/>\n//                                <UserInfo userData={user}/>\n//                               </div>\n//                     )\n//                     :\n//                     (\n//                         <div className=\"single-grid-user\" key={index}>\n//                             <Grid userGridData={user}/>\n//                         </div>\n//                     )\n//                 )\n//                 }\n//         </div>\n//     )\n// }\n// };\nexport{UserList};","map":{"version":3,"sources":["C:/Users/Mixa/Desktop/BIT-React/bit-react-users/src/components/UserList/UserList.jsx"],"names":["React","Component","useEffect","useState","getUserList","Avatar","UserInfo","GridButton","ListButton","Grid","UserList","selected","setSelected","users","setUsers","inputValue","setInputValue","filteredUsers","setFilteredUsers","then","onListClick","onGridClick","refreashPage","onTyping","event","target","value","filtered","filter","user","name","first","includes","map","index"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport { getUserList } from \"../Data/data-users.js\";\r\nimport { Avatar } from \"../Avatar/Avatar\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\nimport { GridButton } from \"../GridButton/GridButton.jsx\";\r\nimport { ListButton } from \"../ListButton/ListButton.jsx\";\r\nimport { Grid } from \"../Grid/Grid.jsx\";\r\n\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = () => {\r\n  const [selected, setSelected] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserList().then((users) => {\r\n      setUsers(users);\r\n      setFilteredUsers(users);\r\n    });\r\n  }, []);\r\n\r\n  const onListClick = () => {\r\n    setSelected(true);\r\n  };\r\n\r\n  const onGridClick = () => {\r\n    setSelected(false);\r\n  };\r\n\r\n  const refreashPage = () => {\r\n    setInputValue(\"\");\r\n    getUserList().then((users) => {\r\n      setUsers(users);\r\n      setFilteredUsers(users);\r\n    });\r\n  };\r\n\r\n  const onTyping = (event) => {\r\n    setInputValue(event.target.value);\r\n    const filtered = users.filter((user) =>\r\n      user.name.first.includes(event.target.value)\r\n    );\r\n    setFilteredUsers(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"flex-div\">\r\n        <div className=\"search-div\">\r\n          <input type=\"text\" placeholder=\"Search users\" value={inputValue} onChange={onTyping}/>\r\n          <button type=\"Submit\" id=\"grid-button\" onClick={refreashPage}>\r\n            Refresh users <i className=\"fas fa-redo\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"btn-container\">\r\n          <ListButton onClick={onListClick} />\r\n          <GridButton onClick={onGridClick} />\r\n        </div>\r\n      </div>\r\n      <div className=\"main-div\">\r\n        <div className=\"grid-flex\">\r\n          {filteredUsers.map((user, index) =>\r\n            selected ? \r\n            (\r\n              <div className=\"single-user\" key={index}>\r\n                <Avatar userLogo={user} />\r\n                <UserInfo userData={user} />\r\n              </div>\r\n            ) \r\n            :\r\n            (\r\n              <div className=\"single-grid-user\" key={index}>\r\n                <Grid userGridData={user} />\r\n              </div>\r\n            )\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// class UserList extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state = {\r\n//             users : [],\r\n//             selected: true\r\n//         }\r\n//     }\r\n\r\n//     onListClick = () => {\r\n//         this.setState({selected: true})\r\n//     };\r\n\r\n//     onGridClick = () => {\r\n//         this.setState({selected: false})\r\n//     };\r\n\r\n//     componentDidMount(){\r\n//         getUserList()\r\n//             .then(users =>{\r\n//                 this.setState({users})\r\n//             })\r\n//     };\r\n\r\n//     render(){\r\n//         return (\r\n//          <div className=\"main-container\">\r\n//                 <div className=\"btn-container\">\r\n//                 <ListButton onClick={this.onListClick} />\r\n//                  <GridButton onClick={this.onGridClick}/>\r\n//              </div>\r\n//                 {\r\n//                 this.state.users.map((user, index) => this.state.selected ?\r\n//                     (\r\n//                         <div className=\"single-user\" key={index}>\r\n//                                <Avatar userLogo={user}/>\r\n//                                <UserInfo userData={user}/>\r\n//                               </div>\r\n//                     )\r\n//                     :\r\n//                     (\r\n//                         <div className=\"single-grid-user\" key={index}>\r\n//                             <Grid userGridData={user}/>\r\n//                         </div>\r\n//                     )\r\n//                 )\r\n//                 }\r\n//         </div>\r\n//     )\r\n// }\r\n// };\r\n\r\nexport { UserList };\r\n"]},"metadata":{},"sourceType":"module"}