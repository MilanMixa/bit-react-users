{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mixa\\\\Desktop\\\\BIT-React\\\\user-list\\\\src\\\\components\\\\UserList\\\\UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport { getUserList } from \"../Data/data-users.js\";\nimport { Avatar } from \"../Avatar/Avatar\";\nimport { UserInfo } from \"../UserInfo/UserInfo\";\nimport { GridButton } from \"../GridButton/GridButton.jsx\";\nimport { ListButton } from \"../ListButton/ListButton.jsx\";\nimport { Grid } from \"../Grid/Grid.jsx\";\nimport \"./UserList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserList = () => {\n  _s();\n\n  const [selected, setSelected] = useState(true);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getUserList().then(users => setUsers(users));\n  }, []);\n\n  const onListClick = () => {\n    setSelected(true);\n  };\n\n  const onGridClick = () => {\n    setSelected(false);\n  };\n\n  const refreashPage = () => {\n    return getUserList().then(users => setUsers(users));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"Submit\",\n      id: \"grid-button\",\n      onClick: refreashPage,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-redo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 75\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(ListButton, {\n        onClick: onListClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridButton, {\n        onClick: onGridClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), users.map((user, index) => selected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-user\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        userLogo: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        userData: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"single-grid-user\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        userGridData: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}; // class UserList extends Component {\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             users : [],\n//             selected: true\n//         }\n//     }\n//     onListClick = () => {\n//         this.setState({selected: true})\n//     };\n//     onGridClick = () => {\n//         this.setState({selected: false})\n//     };\n//     componentDidMount(){\n//         getUserList()\n//             .then(users =>{\n//                 this.setState({users})      \n//             })\n//     };\n//     render(){\n//         return (\n//          <div className=\"main-container\">\n//                 <div className=\"btn-container\">\n//                 <ListButton onClick={this.onListClick} />\n//                  <GridButton onClick={this.onGridClick}/>\n//              </div>\n//                 {\n//                 this.state.users.map((user, index) => this.state.selected ? \n//                     (\n//                         <div className=\"single-user\" key={index}>\n//                                <Avatar userLogo={user}/>\n//                                <UserInfo userData={user}/>\n//                               </div>\n//                     )\n//                     :\n//                     (\n//                         <div className=\"single-grid-user\" key={index}>\n//                             <Grid userGridData={user}/>\n//                         </div>  \n//                     )\n//                 )\n//                 }\n//         </div>\n//     )\n// }\n// };\n\n\n_s(UserList, \"nGq08BiS3j/2a/pKLD4KWA3/tLo=\");\n\n_c = UserList;\nexport { UserList };\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["C:/Users/Mixa/Desktop/BIT-React/user-list/src/components/UserList/UserList.jsx"],"names":["React","Component","useEffect","useState","getUserList","Avatar","UserInfo","GridButton","ListButton","Grid","UserList","selected","setSelected","users","setUsers","then","onListClick","onGridClick","refreashPage","map","user","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AAEA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,WAAW,GAAGW,IAAd,CAAmBF,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAApC;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMG,WAAW,GAAG,MAAK;AACrBJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAMK,WAAW,GAAG,MAAK;AACrBL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAK;AACtB,WACId,WAAW,GAAGW,IAAd,CAAmBF,KAAK,IAAIC,QAAQ,CAACD,KAAD,CAApC,CADJ;AAGH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,EAAE,EAAC,aAAzB;AAAuC,MAAA,OAAO,EAAEK,YAAhD;AAAA,6BAA8D;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAOIJ,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiBV,QAAQ,gBAE3B;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAES;AAAlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,OAAkCC,KAAlC;AAAA;AAAA;AAAA;AAAA,YAF2B,gBAS3B;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,YAAY,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,OAAuCC,KAAvC;AAAA;AAAA;AAAA;AAAA,YATR,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA9CD,C,CAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAnGMX,Q;;KAAAA,Q;AAuGN,SAASA,QAAT","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\n\r\nimport { getUserList } from \"../Data/data-users.js\"\r\nimport { Avatar } from \"../Avatar/Avatar\";\r\nimport { UserInfo } from \"../UserInfo/UserInfo\";\r\nimport { GridButton } from \"../GridButton/GridButton.jsx\";\r\nimport { ListButton } from \"../ListButton/ListButton.jsx\";\r\nimport { Grid } from \"../Grid/Grid.jsx\";\r\n\r\nimport \"./UserList.css\"\r\n\r\nconst UserList = () =>{\r\n    const [selected, setSelected] = useState(true);\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        getUserList().then(users => setUsers(users))\r\n    },[])\r\n\r\n    const onListClick = () =>{\r\n        setSelected(true)\r\n    };\r\n\r\n    const onGridClick = () =>{\r\n        setSelected(false)\r\n    };\r\n\r\n    const refreashPage = () =>{\r\n        return(\r\n            getUserList().then(users => setUsers(users))\r\n        )\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <button type=\"Submit\" id=\"grid-button\" onClick={refreashPage}><i class=\"fas fa-redo\"></i></button>\r\n            <div className=\"btn-container\">\r\n                <ListButton onClick={onListClick} />\r\n                <GridButton onClick={onGridClick}/>\r\n            </div>\r\n            {\r\n            users.map((user, index) => selected ? \r\n                (\r\n                    <div className=\"single-user\" key={index}>\r\n                        <Avatar userLogo={user}/>\r\n                        <UserInfo userData={user}/>\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n                    <div className=\"single-grid-user\" key={index}>\r\n                        <Grid userGridData={user}/>\r\n                    </div>  \r\n                )\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n// class UserList extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.state = {\r\n//             users : [],\r\n//             selected: true\r\n//         }\r\n//     }\r\n\r\n//     onListClick = () => {\r\n//         this.setState({selected: true})\r\n//     };\r\n\r\n//     onGridClick = () => {\r\n//         this.setState({selected: false})\r\n//     };\r\n\r\n//     componentDidMount(){\r\n//         getUserList()\r\n//             .then(users =>{\r\n//                 this.setState({users})      \r\n//             })\r\n//     };\r\n\r\n//     render(){\r\n//         return (\r\n//          <div className=\"main-container\">\r\n//                 <div className=\"btn-container\">\r\n//                 <ListButton onClick={this.onListClick} />\r\n//                  <GridButton onClick={this.onGridClick}/>\r\n//              </div>\r\n//                 {\r\n//                 this.state.users.map((user, index) => this.state.selected ? \r\n//                     (\r\n//                         <div className=\"single-user\" key={index}>\r\n//                                <Avatar userLogo={user}/>\r\n//                                <UserInfo userData={user}/>\r\n//                               </div>\r\n//                     )\r\n//                     :\r\n//                     (\r\n//                         <div className=\"single-grid-user\" key={index}>\r\n//                             <Grid userGridData={user}/>\r\n//                         </div>  \r\n//                     )\r\n//                 )\r\n//                 }\r\n//         </div>\r\n//     )\r\n// }\r\n// };\r\n\r\n\r\n\r\nexport { UserList };\r\n"]},"metadata":{},"sourceType":"module"}